@page "{id:int}"
@model TriviaSpark.Web.Pages.TriviaMatchModel
@{
    var answers = Model?.currentQuestion?.Answers?.ToList() ?? new();
    answers = answers.OrderBy(x => Guid.NewGuid()).ToList();
}
@section HeadScripts
    {
    <style type="text/css">

    </style>
}
<div class="jumbotron">
    <div class="container">
        <form method="post">
            @Html.HiddenFor(model =>model.MatchId)
            <div class="card border-info">
                <div class="card-header">
                    @if (Model.IsMatchFinished)
                    {
                        <h1>Match Finished</h1>
                        <div class="container">
                            <div class="row">
                                <div class="form-group col-5">
                                    <label asp-for="AddQuestions" class="control-label"></label>
                                    <input asp-for="AddQuestions" class="form-control" />
                                    <span asp-validation-for="AddQuestions" class="text-danger"></span>
                                </div>
                                <div class="form-group col-5">
                                    <button type="submit" class="btn btn-primary">Add More Questions</button>
                                </div>
                            </div>
                        </div>

                    }
                    else
                    {
                        <h1>@Html.DisplayFor(model => model.currentQuestion.Category) Trivia</h1>
                    }
                </div>
                <div class="card-body">
                    <div class="container mt-sm-5 my-1">
                        @if (!Model.IsMatchFinished)
                        {
                            @if (Model.currentQuestion is null)
                            {

                            }
                            else
                            {
                                @Html.HiddenFor(model =>model.currentAnswer.QuestionId) <br />
                                @Html.HiddenFor(model =>model.currentQuestion.QuestionId)
                                @if (!Model.IsMatchFinished)
                                {
                                    <div class="question ml-sm-5 pl-sm-5 pt-2">
                                        <div class="py-2 h5"><b>Q. @Html.Raw(Model.currentQuestion.QuestionText)</b></div>
                                        <div class="ml-md-3 ml-sm-3 pl-md-5 pt-sm-0 pt-3" id="options">
                                            <div class="form-group">
                                                <hr />
                                                @foreach (var answer in answers)
                                                {
                                                    <div class="options">
                                                        <input type="radio" asp-for="currentAnswer.AnswerText" value="@answer.AnswerText" /> @Html.Raw(answer.AnswerText)
                                                        <span class="checkmark"></span>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    @Html.TextBoxFor(model =>model.currentAnswer.ElapsedTime, new { style = "display: none;" })
                                }
                            }
                        }
                    </div>
                    <div class="ml-sm-5 pl-sm-5 pt-2">
                        @if (@Model.IsMatchFinished)
                        {
                        }
                        else
                        {
                            if (@Model?.currentAnswer?.IsCorrect ?? false)
                            {
                                <h1>Correct!</h1>
                                <button trype="submit" class="btn btn-primary">New Question</button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-primary">Check Answer</button>
                            }
                        }
                    </div>
                </div>
                <div class="card-footer">
                    @Html.DisplayFor(model => model.theMatchStatus)
                </div>
            </div>
        </form>
    </div>
</div>
<div>
    <script>
        var startTime = new Date().getTime();
        setInterval(function () {
            var now = new Date().getTime();
            var timeElapsed = (now - startTime) / 1000;
            document.getElementById("currentAnswer_ElapsedTime").value = timeElapsed;
        }, 1000);
    </script>

    @if (Model?.triviaMatch?.ScoreCard is not null)
    {
        @await Html.PartialAsync("_ScoreCard", Model.triviaMatch.ScoreCard)
    }
</div>

@section Scripts {
    <script>
        // Disable client-side validation for this form
        $.validator.unobtrusive.options = {
            validateOnSubmit: false
        };
    </script>
}